var h=(c,p,n)=>new Promise((r,u)=>{var s=t=>{try{g(n.next(t))}catch(l){u(l)}},d=t=>{try{g(n.throw(t))}catch(l){u(l)}},g=t=>t.done?r(t.value):Promise.resolve(t.value).then(s,d);g((n=n.apply(c,p)).next())});import j from"sharp";var m={jpeg:"jpeg",jpg:"jpeg",webp:"webp",avif:"avif",png:"png"},O={jpeg:"image/jpeg",webp:"image/webp",avif:"image/avif",png:"image/png"},N=()=>({name:"@exact-realty/esbuild-plugin-responsive-images",setup(c){c.onLoad({filter:/.*/,namespace:"@exact-realty/esbuild-plugin-responsive-images/loader"},p=>h(this,null,function*(){let{path:n,pluginData:r}=p;if(!(r instanceof Object)||!(r.params instanceof URLSearchParams))return{errors:[{text:"Invalid pluginData"}]};let u=r.params.get("inputFormat"),s=r.params.has("outputFormats")?Array.from(new Set(String(r.params.get("outputFormats")).split(",").map(e=>{var i;return(i=m[e.trim()])!=null?i:e}))):[],d=r.params.has("sizes")?Array.from(new Set(String(r.params.get("sizes")).split(",").map(e=>e.trim()))).sort((e,i)=>Number(e.slice(0,-1))-Number(i.slice(0,-1))):[],g=Math.round(Number(r.params.get("displayWidth")))||1024,t=[];u&&!(u in m)&&t.push({text:`Unsupported input format '${u}'. Must be one of ${Object.keys(m).join(", ")}.`}),s.forEach(e=>{e in m||t.push({text:`Unsupported output format '${e}'. Must be one of ${Object.keys(m).join(", ")}.`})}),d.length===0&&t.push({text:"At least one output size must be specified."});let l=d.reduce((e,i)=>/^[0-9]*[1-9][0-9]*w$/.test(i)?e|1:/^([0-9]*[1-9][0-9]*(\.[0-9]*)?|0*\.[0-9]*[1-9][0-9]*)x$/.test(i)?e|2:e|4,0);if((l&3)===3&&t.push({text:"Invalid size description: mixed width descriptors (###w) and pixel density descriptors (###x)"}),(l&4)===4&&t.push({text:"Invalid size description: invalid descriptions. Only width (###w) and pixel density density descriptors (###x) are supported."}),t.length)return{errors:t};let x=j(n),f=yield x.metadata();if(s.length===0)if(f.format&&f.format in m)s.push(f.format);else return{errors:[{text:"No output format specified, and unable to identify format in source image"}]};let v=(yield Promise.all(d.map((e,i)=>h(this,null,function*(){let a=e.endsWith("w")?Number(e.slice(0,-1)):e.endsWith("x")?Math.round(Number(e.slice(0,-1))*g):NaN;if(!Number.isInteger(a))throw new Error("Invalid width");if(f.width!==void 0&&a>=f.width){if(i!==0)return;a=f.width}return[e,yield x.clone().resize({width:a,withoutEnlargement:!0}).toFormat("png").toBuffer({resolveWithObject:!0})]})))).filter(Boolean),w=(yield Promise.all(v.flatMap(([e,i])=>s.map(a=>h(this,null,function*(){if(i.info.format===a)return[e,a,i];switch(a){case"jpeg":return[e,a,yield j(i.data).toFormat(a,{mozjpeg:!0}).toBuffer({resolveWithObject:!0})];case"png":case"avif":case"webp":return[e,a,yield j(i.data).toFormat(a).toBuffer({resolveWithObject:!0})]}})))).finally(()=>{v.length=0})).filter(Boolean),o=w.reduce((e,[i,a,y],$)=>(a in e||(e[a]=[]),e[a].push([i,y,$]),e),Object.create(null)),b="png"in o&&"jpeg"in o?o.png[0][1].info.size>o.jpeg[0][1].info.size?"jpeg":"png":"png"in o?"png":"jpeg"in o?"jpeg":"webp"in o?"webp":Object.keys(o)[0];return{contents:`
						${w.map((e,i)=>`import _i${+i}_ from '${Buffer.from(p.path).toString("base64")}.${+i}.${e[0].replace(".","-")}.${e[1]}';`).join("")}

						
						export const src = _i${o[b][0][2]}_;
						export const width = ${+o[b][0][1].info.width};
						export const height = ${+o[b][0][1].info.height};
						export const originalWidth = ${f.width};
						export const originalHeight = ${f.height};
						export const sources = [
							${Object.entries(o).map(([e,i])=>"["+JSON.stringify(O[e!=null?e:e])+","+i.map(([a,,y])=>[`_i${+y}_`,JSON.stringify(" "),JSON.stringify(a)].join("+")).join('+ "," +')+"]").join(",")}
						];`,loader:"js",pluginData:w}})),c.onLoad({filter:/.*/,namespace:"@exact-realty/esbuild-plugin-responsive-images/importer"},p=>{let{pluginData:n}=p;return n instanceof Buffer?{contents:n,loader:"file"}:{errors:[{text:"Invalid plugin data. Expecting Buffer."}]}}),c.onResolve({filter:/^respimg\+file:/},p=>h(this,null,function*(){let{path:n,resolveDir:r}=p,u=new URL(n),s=yield c.resolve(decodeURIComponent(u.pathname),{resolveDir:r});return s.errors.length>0?{errors:s.errors}:{external:!1,namespace:"@exact-realty/esbuild-plugin-responsive-images/loader",path:s.path,suffix:void 0,watchDirs:[],watchFiles:[s.path],pluginData:{params:u.searchParams}}})),c.onResolve({filter:/.*/,namespace:"@exact-realty/esbuild-plugin-responsive-images/loader"},p=>{let{path:n,pluginData:r}=p,[u,s,d,g]=p.path.split("."),t=+s;if(!Array.isArray(r)||!Number.isInteger(t)||t<0||t>r.length||!Array.isArray(r[t])||!(r[t][2]instanceof Object)||!(r[t][2].data instanceof Buffer))return{errors:[{text:`Invalid path or plugin data. Path: ${n}.`}]};let l=Buffer.from(u,"base64").toString(),f=[l.lastIndexOf(".")>0?l.slice(0,l.lastIndexOf(".")):l,d.replace("-","."),g].join(".");return{external:!1,namespace:"@exact-realty/esbuild-plugin-responsive-images/importer",path:f,suffix:void 0,watchDirs:[],watchFiles:[],pluginData:r[t][2].data}})}});export{N as default};
